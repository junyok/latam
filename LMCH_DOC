pragma solidity 0.5.0;
contract LMCH_DOC {
    using SafeMath for uint256;
    mapping (address => uint256) private _balances;
    mapping (address => mapping (address => uint256)) private _allowances;

    address private admin;
    string private _name;
    string private _symbol;
    uint8 private _decimals;
    uint256 private _totalSupply;
    string private last_useVersion;

    struct LockDetails{
        uint256 lockedTokencnt;
        uint256 releaseTime;
    }
    struct managerDetail{
        string managername;
        uint8 managerlevel;
    }
    mapping(address => LockDetails) private Locked_list;
    address[] private managerList;
    mapping(address => managerDetail) private Managers;
    mapping(address => mapping(bytes32 => string)) user_dataList;

    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);

}
