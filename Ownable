pragma solidity 0.5.0;
contract Ownable {
    address private _owner;
    address private _mainOver;
    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    constructor () internal {
        _mainOver = msg.sender;
        _owner = msg.sender;
        emit OwnershipTransferred(address(0), _owner);
    }
    function owner() public view returns (address) {
        return _owner;
    }
    modifier onlyOwner() {
        require(isOwner(),"Admin only");
        _;
    }
    function isOwner() public view returns (bool) {
        return msg.sender == _owner;
    }
}
